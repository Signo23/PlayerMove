/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package it.playermove;

import com.almasb.fxgl.app.GameApplication;
import com.almasb.fxgl.app.GameSettings;
import com.almasb.fxgl.dsl.FXGL;
import com.almasb.fxgl.entity.Entity;
import com.almasb.fxgl.entity.components.CollidableComponent;
import com.almasb.fxgl.physics.CollisionHandler;

import it.playermove.common.EntityType;
import javafx.geometry.Point2D;
import javafx.scene.input.KeyCode;
import javafx.scene.text.Text;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/** Main application entry-point. */

public final class App extends GameApplication {
    
    private static final String PIXELS_MOVED = "pixelsMoved";
    private static final int PIXELS_TO_MOVE = 3;
    private Entity player;
    
    @Override
    protected void initSettings(final GameSettings settings) {
        settings.setWidth(512);
        settings.setHeight(512);
        settings.setTitle("Aren's Adventures");
        settings.setVersion("0.1.1-alpha");
    }
    
    @Override
    protected void initGame() {
        
        this.player = FXGL.entityBuilder()
                .type(EntityType.PLAYER)
                .at(0, 256)
                .viewWithBBox("player.png")
                .with(new CollidableComponent(true))
                .buildAndAttach();
        
        FXGL.entityBuilder()
        .type(EntityType.BLOCK)
        .at(150, 200)
        .viewWithBBox("chest.png")
        .with(new CollidableComponent(true))
        .buildAndAttach();
        
        FXGL.getGameScene().setBackgroundRepeat(FXGL.getAssetLoader().loadImage("level-one.png"));
    }

    
    @Override
    protected void initInput() {
        FXGL.onKey(KeyCode.D, () -> {
            final List<Point2D> blocksPositions = getBlocksPositions();
            final Point2D newPlyPos = this.player.getPosition().add(PIXELS_TO_MOVE, 0);
            if(!blocksPositions.contains(newPlyPos)) {
                this.player.translateX(PIXELS_TO_MOVE); // move right 5 pixels
                FXGL.inc(PIXELS_MOVED, +PIXELS_TO_MOVE); //increment the variable
            }
        });

        FXGL.onKey(KeyCode.A, () -> {
            final List<Point2D> blocksPositions = getBlocksPositions();
            final Point2D newPlyPos = this.player.getPosition().add(-PIXELS_TO_MOVE, 0);
            if(!blocksPositions.contains(newPlyPos)) {
                this.player.translateX(-PIXELS_TO_MOVE); // move left 5 pixels
                FXGL.inc(PIXELS_MOVED, +PIXELS_TO_MOVE); //increment the variable
            }
        });

        FXGL.onKey(KeyCode.W, () -> {
            final List<Point2D> blocksPositions = getBlocksPositions();
            final Point2D newPlyPos = this.player.getPosition().add(0, -PIXELS_TO_MOVE);
            if(!blocksPositions.contains(newPlyPos)) {
                this.player.translateY(-PIXELS_TO_MOVE); // move up 5 pixels
                FXGL.inc(PIXELS_MOVED, +PIXELS_TO_MOVE); //increment the variable
            }

        });

        FXGL.onKey(KeyCode.S, () -> {
            final List<Point2D> blocksPositions = getBlocksPositions();
            final Point2D newPlyPos = this.player.getPosition().add(0, PIXELS_TO_MOVE);
            if(!blocksPositions.contains(newPlyPos)) {
                this.player.translateY(PIXELS_TO_MOVE); // move down 5 pixels
                FXGL.inc(PIXELS_MOVED, +PIXELS_TO_MOVE); //increment the variable
            }

        });

    }

    private List<Point2D> getBlocksPositions() {
        final List<Entity> blocks = FXGL.getGameWorld().getEntitiesByType(EntityType.BLOCK);
        final List<Point2D> blocksPositions = new ArrayList<>();
        for(final Entity block : blocks) {
           blocksPositions.add(block.getPosition());
        }
        return blocksPositions;
    }
    
    @Override
    protected void initPhysics() {
        FXGL.getPhysicsWorld().addCollisionHandler(new CollisionHandler(EntityType.PLAYER, EntityType.BLOCK) {

            // order of types is the same as passed into the constructor
            @Override
            protected void onCollisionBegin(final Entity player, final Entity coin) {
                System.out.println("Collision");
            }
        });
    }
    
    @Override
    protected void initUI() {
        final Text tx = new Text();
        tx.setTranslateX(50);
        tx.setTranslateY(100);
        tx.textProperty().bind(FXGL.getWorldProperties().intProperty(PIXELS_MOVED).asString());
        
        FXGL.getGameScene().addUINode(tx);
    }
    
    @Override
    protected void initGameVars(final Map<String, Object> vars) {
        vars.put(PIXELS_MOVED, 0);
    }
    
    public static void main(final String[] args) {
        launch(args);
    }
}
